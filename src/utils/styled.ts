import { default as styl } from 'styled-components'; // eslint-disable-line

// before adding new props to UI-components, add prop to this list aswell
export const UIprops: string[] = [
	// animation props
	'animation',
	'animationName',
	'animationDuration',
	'animationTimingFunction',
	'animationDelay',
	'animationIterationCount',
	'animationDirection',
	'animationFillMode',
	'animationPlayState',
	// background props
	'backgroundColor',
	'backgroundColorHex',
	'backgroundColorOpacity',
	'backgroundImage',
	'backgroundRepeat',
	'backgroundPosition',
	'backgroundSize',
	'backgroundGradient',
	'backgroundBlur',
	'backgroundAttachment',
	'backgroundBlendMode',
	// border props
	'border',
	'borderTop',
	'borderRight',
	'borderBottom',
	'borderLeft',
	'borderRadius',
	'boxShadow',
	// flex props
	'flex',
	'direction',
	'alignItems',
	'justifyContent',
	'flexBasis',
	'wrap',
	'gap',
	// grid props
	'rowGap',
	'grid',
	'gridTemplateAreas',
	'gridTemplateColumns',
	'gridTemplateRows',
	'gridAutoColumns',
	'gridAutoFlow',
	'gridAutoRows',
	'justifyItems',
	// hover props
	'hover',
	// overflow props
	'overflow',
	'overflowY',
	'overflowX',
	// position props
	'position',
	'top',
	'right',
	'bottom',
	'left',
	'inset',
	'zIndex',
	'transform',
	'transformOrigin',
	'alignSelf',
	'order',
	// responsive props
	'wideDesktop',
	'largeDesktop',
	'standardDesktop',
	'desktop',
	'largeTablet',
	'tablet',
	'mobile',
	'noHover',
	// size props
	'width',
	'maxWidth',
	'minWidth',
	'height',
	'maxHeight',
	'minHeight',
	// space props
	'padding',
	'paddingBottom',
	'paddingTop',
	'paddingLeft',
	'paddingRight',
	'margin',
	'marginBottom',
	'marginTop',
	'marginLeft',
	'marginRight',
	'scale',
	// text props
	'textAlign',
	'textColor',
	'textSize',
	'fontSize',
	'lineHeight',
	'fontWeight',
	'fontFamily',
	'whiteSpace',
	'uppercase',
	'lowercase',
	'ellipsis',
	'fontStyle',
	'textDecoration',
	'letterSpacing',
	'textColorOpacity',
	'textShadow',
	// transition props
	'transition',
	'transitionDelay',
	'transitionDuration',
	'transitionProperty',
	'transitionTimingFunction',
	'willChange',
	// visibility props
	'show',
	'hide',
	'visibility',
	'initialDisplay',
	'display',
	'opacity',
	// customCss props
	'css',
	// components props
	'color',
	'size',
	'variant',
	'rowGap',
	'inline',
	'edge',
	'sticky',
	'svgColor',
];

export const styled = (ele: any) => styl(ele).withConfig({
	shouldForwardProp: (prop: string) => !UIprops.includes(prop),
});
